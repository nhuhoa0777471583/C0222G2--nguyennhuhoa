{"ast":null,"code":"var _jsxFileName = \"D:\\\\C0222G2--nguyennhuhoa\\\\reactjs\\\\demo-react-2\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\nfunction toFahrenheit(celsius) {\n  return celsius * 9 / 5 + 32;\n}\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return '';\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The water would boil.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"The water would not boil.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n}\n_c = BoilingVerdict;\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: [\"Enter temperature in \", scaleNames[scale], \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: temperature,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n}\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {\n      temperature: '',\n      scale: 'c'\n    };\n  }\n  handleCelsiusChange(temperature) {\n    this.setState({\n      scale: 'c',\n      temperature\n    });\n  }\n  handleFahrenheitChange(temperature) {\n    this.setState({\n      scale: 'f',\n      temperature\n    });\n  }\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TemperatureInput, {\n        scale: \"c\",\n        temperature: celsius,\n        onTemperatureChange: this.handleCelsiusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureInput, {\n        scale: \"f\",\n        temperature: fahrenheit,\n        onTemperatureChange: this.handleFahrenheitChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n        celsius: parseFloat(celsius)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(Calculator, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 96,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"BoilingVerdict\");","map":{"version":3,"names":["React","ReactDOM","scaleNames","c","f","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","BoilingVerdict","props","TemperatureInput","Component","constructor","handleChange","bind","e","onTemperatureChange","target","value","render","scale","Calculator","handleCelsiusChange","handleFahrenheitChange","state","setState","root","createRoot","document","getElementById"],"sources":["D:/C0222G2--nguyennhuhoa/reactjs/demo-react-2/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nconst scaleNames = {\r\n    c: 'Celsius',\r\n    f: 'Fahrenheit'\r\n};\r\n\r\nfunction toCelsius(fahrenheit) {\r\n    return (fahrenheit - 32) * 5 / 9;\r\n}\r\n\r\nfunction toFahrenheit(celsius) {\r\n    return (celsius * 9 / 5) + 32;\r\n}\r\n\r\nfunction tryConvert(temperature, convert) {\r\n    const input = parseFloat(temperature);\r\n    if (Number.isNaN(input)) {\r\n        return '';\r\n    }\r\n    const output = convert(input);\r\n    const rounded = Math.round(output * 1000) / 1000;\r\n    return rounded.toString();\r\n}\r\n\r\nfunction BoilingVerdict(props) {\r\n    if (props.celsius >= 100) {\r\n        return <p>The water would boil.</p>;\r\n    }\r\n    return <p>The water would not boil.</p>;\r\n}\r\n\r\nclass TemperatureInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.props.onTemperatureChange(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        const temperature = this.props.temperature;\r\n        const scale = this.props.scale;\r\n        return (\r\n            <fieldset>\r\n                <legend>Enter temperature in {scaleNames[scale]}:</legend>\r\n                <input value={temperature}\r\n                       onChange={this.handleChange} />\r\n            </fieldset>\r\n        );\r\n    }\r\n}\r\n\r\nclass Calculator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\r\n        this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\r\n        this.state = {temperature: '', scale: 'c'};\r\n    }\r\n\r\n    handleCelsiusChange(temperature) {\r\n        this.setState({scale: 'c', temperature});\r\n    }\r\n\r\n    handleFahrenheitChange(temperature) {\r\n        this.setState({scale: 'f', temperature});\r\n    }\r\n\r\n    render() {\r\n        const scale = this.state.scale;\r\n        const temperature = this.state.temperature;\r\n        const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\r\n        const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\r\n\r\n        return (\r\n            <div>\r\n                <TemperatureInput\r\n                    scale=\"c\"\r\n                    temperature={celsius}\r\n                    onTemperatureChange={this.handleCelsiusChange} />\r\n                <TemperatureInput\r\n                    scale=\"f\"\r\n                    temperature={fahrenheit}\r\n                    onTemperatureChange={this.handleFahrenheitChange} />\r\n                <BoilingVerdict\r\n                    celsius={parseFloat(celsius)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<Calculator />);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}